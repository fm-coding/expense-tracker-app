server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:host.docker.internal}:${DB_PORT:5432}/${DB_NAME:pm_auth_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:4422}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    test-connection: false

  liquibase:
    enabled: false

logging:
  level:
    com.pm.authservice: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  file:
    name: /app/logs/auth-service.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

app:
  jwt:
    secret: ${JWT_SECRET}
    access-token-expiration-ms: 900000  # 15 minutes
    refresh-token-expiration-ms: 2592000000  # 30 days
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}
  mail:
    from: ${MAIL_USERNAME:noreply@pmsystem.com}
  external:
    port: ${APP_EXTERNAL_PORT:8084}
  cors:
    allowed-origins:
      - http://localhost:3000
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true
    max-age: 3600

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    db:
      enabled: true
    mail:
      enabled: true

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false