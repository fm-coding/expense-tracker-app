server:
  port: ${SERVER_PORT:8083}
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: expense-service

  profiles:
    active: dev

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:pm_expense_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:4422}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000

  jpa:
    hibernate:
      ddl-auto: create-drop  # Drops and recreates tables on each restart
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
    open-in-view: false
    defer-datasource-initialization: true

  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
      continue-on-error: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.pm.expenseservice: INFO
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

app:
  jwt:
    secret: ${JWT_SECRET:MyVerySecureSecretKeyThatIsAtLeast64CharactersLongForHS512AlgorithmSecurity123456789}
  cors:
    allowed-origins: http://localhost:3000,http://localhost:3001
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true